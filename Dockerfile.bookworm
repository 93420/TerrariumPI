# Build for raspberry pi
# docker buildx build --platform linux/arm/v7 --progress=plain -t theyosh/terrariumpi:4.0.0 -f Dockerfile --push .

# build sispmctl 4.11
FROM gcc:12-bookworm as sispmctl_builder
ARG SISPMCTL_VERSION="4.11"
WORKDIR /sispmctl
RUN apt-get update \
  && apt-get install -y --no-install-recommends libusb-dev \
  && wget https://sourceforge.net/projects/sispmctl/files/sispmctl/sispmctl-${SISPMCTL_VERSION}/sispmctl-${SISPMCTL_VERSION}.tar.gz/download -O sispmctl-${SISPMCTL_VERSION}.tar.gz \
  && tar zxvf sispmctl-${SISPMCTL_VERSION}.tar.gz --strip 1 \
  && ./configure \
  && make \
  && make install

# python builder, help keep image small
FROM python:3.11-bookworm as python_builder
# These two environment variables prevent __pycache__/ files.
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1
COPY requirements.txt .
COPY contrib/python3-voltcraft-sem6000.patch.diff .

# requirements are slightly different for docker
ENV PIP_EXTRA_INDEX_URL=https://www.piwheels.org/simple
RUN apt-get update \
  && apt-get install -y --no-install-recommends libglib2.0-dev libbluetooth-dev git make gcc \
  && python3 -m venv /opt/venv \
  && sed -i -E "s@opencv-python-headless==[^ ]+@@" requirements.txt \
  && sed -i -E "s@numpy==[^ ]+@@" requirements.txt \
  && sed -i -E "s@paho-mqtt==[^ ]+@paho-mqtt==1.6.1@" requirements.txt \
  && sed -i -E "s@icalendar==[^ ]+@icalendar==4.0.9@" requirements.txt \
  && sed -i  "s@git+https://github.com/IanHarvey/bluepy@git+https://github.com/Mausy5043/bluepy3@" requirements.txt \
  && /opt/venv/bin/pip install -U pip==24.0 wheel==0.42.0 \
  && /opt/venv/bin/pip install -U smbus==1.1.post2 \
  && /opt/venv/bin/pip install -r requirements.txt \
  && /opt/venv/bin/pip install -U paho-mqtt==2.0.0 icalendar==5.0.11 \
  && /opt/venv/bin/pip uninstall -y numpy \
  && echo '#!/bin/bash' > /usr/bin/bluetoothctl \
  && echo 'echo "Version 5.66"' >> /usr/bin/bluetoothctl \
  && chmod +x /usr/bin/bluetoothctl \
  && /opt/venv/bin/python -m bluepy3.btle 2> /dev/null || true \
  && find /opt/venv -type d -name "test*" | xargs rm -rf  \
  && find /opt/venv -type d -name "__pycache__" | xargs rm -rf \
  && find /opt/venv -type d -name ".git" | xargs rm -rf \
  && find /opt/venv -type f -name "*.pyc" -delete

WORKDIR /TerrariumPI
# Just clone the libraries, ignore docker cache...
RUN git clone https://github.com/ageir/chirp-rpi.git --depth 1 "3rdparty/chirp-rpi" \
  && git clone https://github.com/perryflynn/energenie-connect0r.git --depth 1 "3rdparty/energenie-connect0r" \
  && git clone https://github.com/SequentMicrosystems/relay8-rpi.git --depth 1 "3rdparty/relay8-rpi" \
  && git clone https://github.com/AtlasScientific/Raspberry-Pi-sample-code.git --depth 1 "3rdparty/AtlasScientific" \
  && git clone https://github.com/moormaster/python3-voltcraft-sem6000.git --depth 1 "3rdparty/python3-voltcraft-sem6000" \
  && patch -N -s -r /dev/null 3rdparty/python3-voltcraft-sem6000/sem6000/repeat_on_failure_decorator.py < /python3-voltcraft-sem6000.patch.diff >/dev/null \
  && rm -Rf 3rdparty/Bright-Pi/Documents \
  && find . -type d -name  "__pycache__" -exec rm -r {} + \
  && find . -type f -name "*.pyc" -delete \
  && find . -type d -name ".git" -exec rm -r {} +

# Sourcecode cleanup and pre-prep
FROM python:3.11-bookworm as sourcecode
WORKDIR /TerrariumPI
COPY . .
# remove git and 3rdparty dir from code copy to help keep image smaller
# 3rdparty is coming from the builder image
RUN rm -Rf .git* 3rdparty gui package*.json postcss.config.js rollup.config.js .env.* html-template.js requirements.txt yarn.lock

# actual image
FROM python:3.11-slim-bookworm as finalimage
ARG GITHUB_SHA
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1
ENV DEBIAN_FRONTEND=noninteractive

RUN apt-get update \
  && apt-get install -y --no-install-recommends gnupg \
  && echo "deb http://raspbian.raspberrypi.org/raspbian/ bookworm main contrib non-free rpi" > /etc/apt/sources.list.d/raspberrypi.list \
  && echo "deb http://archive.raspberrypi.org/debian/ bookworm main" >> /etc/apt/sources.list.d/raspberrypi.list \
  && apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 9165938D90FDDD2E 82B129927FA3303E \
  && apt-get update \
  && apt-get full-upgrade -y --no-install-recommends \
  && apt-get install -y --no-install-recommends sudo bluetooth netcat-openbsd libcamera-apps-lite rpicam-apps-lite pigpio ffmpeg libxslt1.1 libftdi1 openjdk-17-jre-headless python3-opencv \
  && apt-get --purge autoremove -y \
  && apt-get autoclean \
  && rm -rf /var/lib/apt/lists/* \
  && find /var/log/ -type f -delete \
  && find /var/cache/ -type f -delete

COPY --from=sispmctl_builder /usr/local/lib/libsispmctl* /usr/local/lib/.
COPY --from=sispmctl_builder /usr/local/bin/sispmctl /usr/local/bin/sispmctl

COPY --from=python_builder /opt/venv /opt/venv
COPY --from=python_builder /TerrariumPI/3rdparty /TerrariumPI/3rdparty
COPY --from=sourcecode /TerrariumPI /TerrariumPI

RUN ln -s /usr/lib/python3/dist-packages/cv2.*.so /opt/venv/lib/python3.11/site-packages \
  && ln -s /usr/lib/python3/dist-packages/numpy* /opt/venv/lib/python3.11/site-packages \
  && rm /usr/local/lib/libsispmctl.so /usr/local/lib/libsispmctl.so.0 \
  && ln -s /usr/local/lib/libsispmctl.so.0.2.2 /usr/local/lib/libsispmctl.so \
  && ln -s /usr/local/lib/libsispmctl.so.0.2.2 /usr/local/lib/libsispmctl.so.0 \
  && ldconfig

WORKDIR /TerrariumPI
# Set git version in a temp file
RUN echo "${GITHUB_SHA}" > .gitversion && echo '[ ! -z "$TERM" -a -r /TerrariumPI/motd.sh ] && /TerrariumPI/motd.sh' >> /etc/bash.bashrc

HEALTHCHECK --interval=180s --timeout=5s --start-period=120s CMD python contrib/docker_health.py

ENTRYPOINT ["/TerrariumPI/run.sh"]

CMD ["/opt/venv/bin/python", "/TerrariumPI/terrariumPI.py"]
